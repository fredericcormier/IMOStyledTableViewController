{"name":"IMOSTVC","tagline":"Style sheet based like Table View Controller.","body":"#IMOStyledTableViewController\r\n#An easy-to-customize style sheet based like Table View Controller.\r\n\r\n\r\n### When this:\r\n```\r\n//style.imo\r\nNavBarTintColor                 0.600   0.492   0.331   1.000\r\nBackgroundColor                 #CDC3B9\r\nTextLabelFont                   HelveticaNeue-Bold       17.0\r\n\r\nTextLabelTextColor              #3F3B35\r\n\r\nTopGradientColor                1.000   0.995   0.995   1.000\r\nBottomGradientColor             0.825   0.780   0.724   1.000\r\n\r\nSelectedTopGradientColor        #8A6F48\r\nSelectedBottomGradientColor     #725C3C\r\n```\r\n###Generates this:\r\n<center>\r\n![screenshot]  \r\n(http://www.i-mo.eu/zings/imostvc7_small.png)\r\n![screenshot]  \r\n(http://www.i-mo.eu/zings/imostvc_small.png)\r\n</center>\r\n##Installation\r\n\r\n###Manually  \r\nCopy  the IMOStyledTableViewController directory to your project  \r\n\r\n###Using cocoapods\r\nadd `pod 'IMOStyledTableViewController', :head` to your Podfile\r\n##Usage\r\n\r\n####A - Style sheet\r\n\r\n1 - Add a file named `style.imo` to your project, containing all the properties you want to customize (see the ~~wiki or~~ the demo for details on syntax and which properties are available).\r\n\r\n2 - Make your table view controller, a subclass of IMOStyledTableViewController\r\n```objective-c\r\n#import \"IMOStyledTableViewController.h\"\r\n\r\n@interface MyStyledTableViewController : IMOStyledTableViewController\r\n```\r\n3 - Instantiate like this\r\n```objective-c\r\nMyStyledTableViewController *mstvc = [[MyStyledTableViewController alloc] initWithStyle:UITableViewStyleGrouped\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t styleSheet:nil];\r\n\r\n```\r\n\r\n4 - In your `- tableView:cellForRowAtIndexPath:` method, instead of using the regular boilerplate code to fire a UITableViewCell, use this:\r\n\r\n```objective-c\r\n- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\r\n    \r\n    IMOStyledCell *cell;\r\n    cell = [IMOStyledCell cellForTableViewController:self \r\n    \t\t\t\t\t\t\t\t\t atIndexPath:indexPath \r\n    \t\t\t\t\t\t\t\t\t       style:IMOStyledCellStyleValue1];\r\n    /*\r\n   \t\tDo whatever you have to do with your cell   \r\n\t*/\r\n    return cell;\r\n}\r\n```\r\n*Notice that you don't have to handle dequeuing cells and declaring cell identifiers, IMOStyledTableViewController takes care of that for you.*\r\n\r\n####B - Dictionary  \r\n\r\nAlthough it's a good idea to use the style sheet strategy when all your Table View Controllers should use the same style, you might use the dictionary approach to customize that very single Table View Controller that may differ from the rest.  \r\nUse the `-initWithStyle:styleSheet:`method and pass a dictionary of key/value 's to it:\r\n```objective-c\r\nNSDictionary *plainStyleSheet = \r\n@{\r\nIMOStyledCellBackgroundImageKey: [UIImage imageNamed:@\"clouds.png\"],\r\nIMOStyledCellNavBarTintColorKey:[UIColor colorWithRed:0.145 green:0.185 blue:0.359 alpha:1.000],\r\nIMOStyledCellTopGradientColorKey:[UIColor colorWithWhite:0.945 alpha:0.220],\r\nIMOStyledCellBottomGradientColorKey:[UIColor colorWithRed:0.628 green:0.632 blue:0.684 alpha:0.570],\r\nIMOStyledCellTextLabelFontKey:[UIFont fontWithName:@\"HelveticaNeue\" size:18.0],\r\nIMOStyledCellTextLabelTextColorKey:[UIColor whiteColor],\r\nIMOStyledCellTopSeparatorColorKey:[UIColor colorWithRed:0.771 green:0.793 blue:0.820 alpha:1.000],\r\nIMOStyledCellBottomSeparatorColorKey:[UIColor lightGrayColor]\r\n};\r\n\r\n MyCustomStylePlainViewController *mcspvc = [[MyCustomStylePlainViewController alloc]\r\n                                                 initWithStyle:UITableViewStylePlain\r\n                                                    styleSheet:plainStyleSheet];\r\n\r\n```  \r\n##Keys and style properties\r\n\r\nA style property name consists of a key name as declared in `IMOStyledCellKeys.h` minus the prefix *\"IMOStyledCell\"*  and the suffix *\"key\"*.  \r\nThus **\"IMOStyledCellTopGradientColorKey\"** gives **\"CellTopGradientColor\"**.\r\n\r\n##style.imo parameters and syntax\r\n\r\nYou can enter colors in several ways\r\n- RGBA Colors  between 0 and 1.0\r\n- Hex Color 6 Digits \r\n- Hex Color 3 Digits \r\n\r\nFor font, pass the font name and the size in float\r\n\r\nFor images, pass the name, no quote, no extension\r\n\r\nValid Boolean are :YES, yes, y, TRUE, true, t, NO, no, n, FALSE , F, f and of course 0 or 1,2,3,4,5,6,7,8,9.  \r\n( see `NSString boolValue` for details)\r\n\r\n#####Examples:\r\n```\r\nNavBarTintColor                 0.600   0.492   0.331   1.000 \t//RGBA\r\nBackgroundColor                 0xCDC3B9    \t\t\t\t\t// Hex, 6 digits only\r\nBackgroundImage                 clouds\t\t\t\t\t\t\t// Image Name - Doesn't need extension\r\nTextLabelFont                   HelveticaNeue-Bold       17.0\t// Font name and size\r\nTextLabelTextColor              #3F3B35\t\t\t\t\t\t\t// Hex, 3 or 6 digits\r\n``` \r\n\r\n \r\n##IMOStyledTableViewController comes with several predefined cell subclasses:\r\n* IMOStyledCell\r\n* IMOStyledEditCell\r\n* IMOStyledNoteViewCell\r\n* IMOStyledImageCell\r\n\r\nCheck the demo  for examples on using these subclasses  \r\n  \r\n\r\n##Properties at your disposal\r\nproperty\t\t\t\t\t| Comments\r\n----------------------------|-------------------------\r\nNavBarTintColor\t\t\t\t|Color of the navigation bar and of the IMOStyledNoteViewCell's accessory view\r\nBackgroundImage   \t\t\t|Table View Controller background image name\r\nBackgroundColor\t\t\t\t|Table View Controller background color\r\nTopGradientColor \t\t\t|Cell's top gradient color\r\nBottomGradientColor \t\t|Cell's bottom gradient color\r\nSelectedTopGradientColor\t|Selected cell's top gradient color\r\nSelectedBottomGradientCo\t|Selected cell's bottom gradient color\r\nTopSeparatorColor\t\t\t|Cell's top line separator color \r\nBottomSeparatorColor\t\t|Cell's bottom line separator color\r\nTextLabelTextColor \t\t\t|same as in UITableViewCells\r\nDetailTextLabelTextColor\t|same as in UITableViewCells\r\nTextLabelFont \t\t\t\t|same as in UITableViewCells\r\nDetailTextLabelFont \t\t|same as in UITableViewCells\r\nUseCustomHeader \t\t\t|the property name says it all\r\nHeaderFont \t\t\t\t\t|if UseCustomHeader is YES\r\nHeaderTextColor \t\t\t|if UseCustomHeader is YES\r\nUseCustomFooter \t\t\t|Guess what ?\r\nFooterFont \t\t\t\t\t|Again\r\nFooterTextColor \t\t\t|No comment\r\nTextFieldFont \t\t\t\t|This is the textfield of an IMOStyledEditCell\r\nTextFieldTextColor \t\t\t|This is the textfield of an IMOStyledEditCell\r\nTextCaptionFont \t\t\t|The TextCaption is the label on the left of the textfield in an IMOStyledEditCell\r\nTextCaptionTextColor \t\t|same\r\nNoteViewFont \t\t\t\t|Note views cell with multiple editing lines\r\nNoteViewTextColor \t\t\t|guess\r\nNoteViewLineColor \t\t\t|guess\r\nPlaceHolderFont\t\t\t\t|Change to your taste\r\nPlaceHolderTextColor\t\t|Depending on your cell colorâ€¦ you may want to change this\r\n\r\n\r\n\r\n\r\n\r\n\r\n##LICENSE\r\nCopyright (C) 2013 Frederic Cormier\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}